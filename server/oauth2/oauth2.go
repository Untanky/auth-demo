package oauth2

type responseType string
type grantType string

const (
	// Request an authorization code
	ResponseTypeCode responseType = "code"
	// Request an access token
	ResponseTypeToken responseType = "token"
	// Exchange authorizaation code for access token
	GrantTypeAuthorizationCode grantType = "authorization_code"
	// Exchange resource owner password for access token
	GrantTypePassword grantType = "password"
	// Exchange client credentials for access token
	GrantTypeClientCredentials grantType = "client_credentials"
	// Exchange refresh token for access token
	GrantTypeRefreshToken grantType = "refreshToken"
)

// Authorization request to begin the following OAuth flows:
// - authorization code
// - implicit
type AuthorizationRequest struct {
	// REQUIRED. Value MUST be a valid response type.
	ResponseType responseType `form:"response_Type"`
	// REQUIRED. The client identifier.
	ClientID clientID `form:"client_id"`
	// OPTIONAL. The URI to redirect upon authorization success or failure
	RedirectURI string `form:"redirect_uri;omitempty"`
	// OPTIONAL. The scope of the access request
	Scope []string `form:"scope;omitempty"`
	// OPTIONAL. An opaque value used by the client to maintain
	// state between the request and callback.
	State string `form:"state;omitempty"`
}

// Authorization response
//
// Transmitted via HTTP redirect
type AuthorizationResponse struct {
	// REQUIRED. The authorization code generated by the authorization server.
	Code string `form:"code"`
	// REQUIRED if the "state" parameter was present in the client authorization request.
	State string `form:"state;omitempty"`
}

// Request to exchange credential for access token.
type TokenRequest struct {
	// REQUIRED. Value MUST be a valid grant type.
	GrantType grantType `form:"grant_type"`
	// OPTIONAL. The scope of the access request
	Scope []string `form:"scope;omitempty"`
}

type AuthorizationCodeTokenRequest struct {
	TokenRequest
	// REQUIRED. The authorization code received from the authorization server.
	Code string `form:"code"`
	// REQUIRED, if the "redirect_uri" parameter was included in the
	// authorization request and their values MUST be identical.
	RedirectURI string `form:"redirect_uri"`
	// REQUIRED, if the client is not authenticating with the
	// authorization server as described in Section 3.2.1.
	ClientId clientID `form:"client_id;omitempty"`
}

type RefreshTokenRequest struct {
	TokenRequest
	// REQUIRED. The refresh token issued to the client.
	RefreshToken string `form:"refresh_token"`
}

type TokenResponse struct {
	// REQUIRED. The access token issued by the authorization server.
	AccessToken string `json:"access_token" form:"access_token"`
	// REQUIRED. The type of the token issued.
	TokenType string `json:"token_type" form:"token_type"`
	// RECOMMENDED. The lifetime in seconds of the access token.
	ExpiresIn int64 `json:"expires_in;omitempty" form:"expires_in;omitempty"`
	// OPTIONAL. The refresh token, which can be used to obtain newaccess tokens.
	RefreshToken string `json:"refresh_token;omitempty" form:"refresh_token;omitempty"`
	// OPTIONAL, if identical to the scope requested by the client; otherwise, REQUIRED.
	Scope []string `json:"scope;omitempty" form:"scope;omitempty"`
	// REQUIRED if the "state" parameter was present in the client
	// authorization request. The exact value received from the
	// client.
	State string `json:"state;omitempty" form:"state;omitempty"`
}
